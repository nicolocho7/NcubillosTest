import AP.Common.GDT as apCommonGDT;
import AP.FO.PriceAndTax.Global;
import AP.CustomerInvoicing.Global;
import AP.FO.BusinessPartner.Global;

businessobject Test raises msg {

    // Root node must not be specified, it is created implicitly
    //
    // Add elements here. 
    // 
    // To declare an element as alternative key, use the [AlternativeKey] annotation.
    // Please note:
    // - An alternative key of type UUID exists implicitly for each node, enabling the node
    //   to be used as an association target.
    // - The QueryByElements query is created automatically for each node.
    // - Code completion is available with CTRL + SPACE.

	message msg text "&" : LANGUAGEINDEPENDENT_EXTENDED_Text;

	[AlternativeKey][Label("ID")] element CarParkID : ID;
	[Label("CarParkName")] element CarParkName: LANGUAGEINDEPENDENT_LONG_Text;
	[Label("CarParkDescription")] element CarParkDescription: LANGUAGEINDEPENDENT_LONG_Text;
	[Label("NumberOfParkingSpaces")] element NumberOfParkingSpaces: IntegerValue;

	node ParkingSpace [0, n] raises msgItm {
		message msgItm text "&" : LANGUAGEINDEPENDENT_EXTENDED_Text;
		[Label("SpaceID")] element ParkingSpaceID : ID;
		[Label("ParkingSpaceAssignedEmployeeID")] element ParkingSpaceAssignedEmployeeID : ID;		
		[Label("ParkingSpaceDisabled")] element ParkingSpaceDisabled : Indicator;
		[Label("VehicleRegistrationNumber")] element VehicleRegistrationNumber : LANGUAGEINDEPENDENT_MEDIUM_Text;
		[Label("ParkingSpaceLevel")] element ParkingSpaceLevel : NumberValue;
		association ToEmployee [0, 1] to Employee;
	}
}