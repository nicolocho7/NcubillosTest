import ABSL;
import AP.Common.GDT as apCommonGDT;
import BASIS.Global as basis;
import AP.FO.TaxArrangement.Global;
import AP.FO.ProductDataMaintenance.Global;
import AP.FinancialAccounting.Global;

var strLine = "";
//Campos para asignar
var vCampo1;
var vCampo2;
var vCampo3;
var vCampo4;
var vCampo5;
var vCampo6;
var vCampo7;
var vCurrentDate = Context.GetCurrentUserDate(); 
var qryAccount50_2 = BOAccount50_2.QueryByElements;
var prmAccount50_2 = qryAccount50_2.CreateSelectionParams();
	prmAccount50_2.Add(qryAccount50_2.CompanyID, "I", "EQ",this.CompanyID.RemoveLeadingZeros());
	prmAccount50_2.Add(qryAccount50_2.InitialDate, "I", "LE", this.DateInitial);
	prmAccount50_2.Add(qryAccount50_2.EndDate, "I", "GE", this.DateEnd);
var Result50 = qryAccount50_2.Execute(prmAccount50_2);

if(Result50.Count() > 0)
{
	var insAccount50_2;
	foreach(insAccount50_2 in Result50){
		vCampo1 = this.DateEnd.GetYear() + this.DateEnd.GetMonth() + this.DateEnd.GetDay();	
		vCampo2 = insAccount50_2.TypeofShareholderIdentityDocument.Trim();
		if(vCampo2.Length()>1)
		{
			vCampo2.Substring(0,1);
		}
		vCampo3 = insAccount50_2.IDnumberV1;
		if(vCampo3.Length()>15)
		{
			vCampo3.Substring(0,15);
		}
		vCampo5 = insAccount50_2.Surnameshareholdersnames;
		if(vCampo5.Length()>100)
		{
			vCampo5.Substring(0,100);
		}
		vCampo4 = insAccount50_2.ActionsTypesCode;
		if(vCampo4.Length()>2)
		{
			vCampo4.Substring(0,2); 
		}
		vCampo6 = insAccount50_2.actionsNumber.RoundToString(0);
		if(vCampo6.Length()>12)
		{
			vCampo6.Substring(0,12);
		}
		vCampo7 = insAccount50_2.ParticipationTotalpercentage.RoundToString(8);
		if(vCampo7.Length()>12)
		{
			vCampo7.Substring(0,12);
		}
		vCampo7 = vCampo7.Replace(",",".");
		strLine =	strLine + vCampo1 + "|" +
					vCampo2 + "|" + 
					vCampo3 + "|" +
					vCampo4 + "|" +
					vCampo5 + "|" +
					vCampo6 + "|" +
					vCampo7 + "|" +
					"1" + "|" +"\r\n";
	}
	var name : LANGUAGEINDEPENDENT_LONG_Name;
	var type : DocumentTypeCode;
	var desc : Description;
	var binary : basis:BinaryObject;
	var vNit;
	var qryCompanyTax = CompanyTaxArrangement.QueryByElements;
	var prmCompanyTax = qryCompanyTax.CreateSelectionParams();
		prmCompanyTax.Add(qryCompanyTax.CompanyID,"I","EQ",this.CompanyID.RemoveLeadingZeros());
	var insCompanyTax = qryCompanyTax.Execute(prmCompanyTax).GetFirst();
	if(insCompanyTax.IsSet()){
		if(insCompanyTax.TaxIdentificationNumber.Count() > 0){
			vNit = insCompanyTax.TaxIdentificationNumber.GetFirst().PartyTaxID.content;
		}
	}


	name = "LE" + vNit + this.DateEnd.GetYear() + this.DateEnd.GetMonth() + this.DateEnd.GetDay() + "031602" + "07" + "1111" + ".TXT";
	type.content = "10001";
	type.listID = "10296";
	binary.mimeCode = "text/plain";
	binary.content = Binary.ParseFromString(strLine);

	this.ReportsAttachments.CreateFile(type, name, name, desc, binary);	


}else{
	var vacio  = "";	
	var name : LANGUAGEINDEPENDENT_LONG_Name;
	var type : DocumentTypeCode;
	var desc : Description;
	var binary : basis:BinaryObject;
	var vNit;
	var qryCompanyTax = CompanyTaxArrangement.QueryByElements;
	var prmCompanyTax = qryCompanyTax.CreateSelectionParams();
		prmCompanyTax.Add(qryCompanyTax.CompanyID,"I","EQ",this.CompanyID.RemoveLeadingZeros());
	var insCompanyTax = qryCompanyTax.Execute(prmCompanyTax).GetFirst();
	if(insCompanyTax.IsSet()){
		if(insCompanyTax.TaxIdentificationNumber.Count() > 0){
			vNit = insCompanyTax.TaxIdentificationNumber.GetFirst().PartyTaxID.content;
		}
	}


	name = "LE" + vNit + this.DateEnd.GetYear() + this.DateEnd.GetMonth() + this.DateEnd.GetDay() + "031602" + "07" + "1011" + ".TXT";
	type.content = "10001";
	type.listID = "10296";
	binary.mimeCode = "text/plain";
	binary.content = Binary.ParseFromString(vacio);

	this.ReportsAttachments.CreateFile(type, name, name, desc, binary);	

}