/*
	Add your SAP Business ByDesign scripting language implementation for:
		Business Object: BOMassLocalization
		Node: Root
		Action: Load 
		
	Note: 
	  - To access the elements of the business object node, 
	    use path expressions, for example, this.<element name>. 
	  - To use code completion, press CTRL+J. 
	   
*/

import ABSL;

import AP.Common.GDT as apCommonGDT;

//Crear instancia
var insDataCD : elementsof BODepartament;
var insDataCC : elementsof BODistrict;
var insDataCB : elementsof BOProvince;
var LanguageCode = Context.GetCurrentUserLanguage().ToString();
var separador = ";";
var string = "";
var subString = "";
var indiceFind = 0;
var indiceLast;
var i = 0;
var subIndiceLast = 0;
var subIndiceFind = 0;
var subStringAux = "";
var j = 0;
var contador = 0;
var msgSave = "Grabar para guardar los cambios.";
var msgIndustry = ": campo industria no es valido ";
var msgObject = "Falta definir Objeto";
var msgPosition = "Posición ";
//var msgSurcharge = ": campo sobretasa no es valido ";
//var msgWarnings = ": campo sobretasa no es valido ";
var msgError = ": error al grabar ";
var msgloaded = "Se cargaron ";
var msgpositions = " posiciones";
var msgAttach = "Solo debe adjuntar un archivo .txt";

if (LanguageCode != "ES")
{
	msgSave = "Save to save the changes.";
	msgIndustry = ": industry field is not valid ";
	msgObject = "Falta definir Objeto";
	//msgSurcharge = ": surtax field is invalid ";
	//msgWarnings = ": surtax field is invalid ";
	msgError = ": error record ";
	msgloaded = "They were charged ";
	msgpositions = " positions";
	msgAttach = "You only need to attach a file .txt";
}

if (!this.objeto.IsInitial()){

if (this.Attachment.IsSet() && this.Attachment.DocumentList.Count() == 1)
{
	var MyAtt = this.Attachment.DocumentList;
	var FileCont = MyAtt.GetFirst().FileContent;
	string = FileCont.BinaryObject.content.ToString();
	raise msj.Create("I", msgSave);
	while (indiceFind != -1)
	{
		subIndiceLast = 0;
		subIndiceFind = 0;
		subStringAux = "";
		j = 0;
		i = i + 1;
		indiceLast = string.Length() - 1;
		indiceFind = string.Find("\n");
		if (indiceFind != -1)
		{
			var insIsConsistent = true;
			subString = string.Substring(0, indiceFind);
			string = string.Substring(indiceFind + 1, indiceLast - indiceFind);
			
				//--Departament
			if (this.objeto == CLMassLReceiverCodeCode.CO_DEPARTAMENT)
			{
				//Detalle
				while (subIndiceFind != -1)
				{
					j = j + 1;
					subIndiceLast = subString.Length() - 1;
					subIndiceFind = subString.Find(";");
					subStringAux = subString.Substring(0, subIndiceFind);
					subString = subString.Substring(subIndiceFind + 1, subIndiceLast - subIndiceFind);

					if (j == 1)
					{
						insDataCD.DepartamentID = subStringAux.Trim();
					}
					else if (j == 2)
					{//Depatamento
						insDataCD.DepartamentDescription = subStringAux.Trim();
					
						subString = subString.Replace("\r", "");
						
						var insLoad = BODepartament.Create(insDataCD);
						if (!insLoad.IsSet())
						{
							raise msj.Create("E", msgPosition + i.ToString().Trim() + msgError); 
						}
						else
						{
							contador = contador + 1;
							this.cargado = true;
						}
						insDataCC.Clear();
						subIndiceFind = -1;
					}
				}//fin while(subIndiceFind != -1){ 
			}//fin if (this.objeto == CLMassLReceiverCodeCode.CO_CLIECITY)


			//--District 
			if (this.objeto == CLMassLReceiverCodeCode.CO_DISTRICT)
			{
				//Detalle
				while (subIndiceFind != -1)
				{
					j = j + 1;
					subIndiceLast = subString.Length() - 1;
					subIndiceFind = subString.Find(";");
					subStringAux = subString.Substring(0, subIndiceFind);
					subString = subString.Substring(subIndiceFind + 1, subIndiceLast - subIndiceFind);

					 if (j == 1)
					{//Departamento
						insDataCC.DistrictDepartament = subStringAux.Trim();
					}
					else if (j == 2)
					{
					insDataCC.DistrictCod = subStringAux.Trim();	
					}
					else if (j == 3)
					{//CityID
					insDataCC.DistrictDesc = subStringAux.Trim();	
						
						subString = subString.Replace("\r", "");
						//subString = subString.Replace(" ", "");													
						insDataCC.DistrictDesc = subString.Trim();

						var insLoad = BODistrict.Create(insDataCC);
						if (!insLoad.IsSet())
						{
							raise msj.Create("E", msgPosition + i.ToString().Trim() + msgError); 
						}
						else
						{
							contador = contador + 1;
							this.cargado = true;
						}
						insDataCC.Clear();
						subIndiceFind = -1;
					}
				}//fin while(subIndiceFind != -1){ 
			}//fin if (this.objeto == CLMassLReceiverCodeCode.CO_CLIECITY)




			//--Province para dirección del cliente
			if (this.objeto == CLMassLReceiverCodeCode.CO_PROVINCE)
			{
				//Detalle
				while (subIndiceFind != -1)
				{
					j = j + 1;
					subIndiceLast = subString.Length() - 1;
					subIndiceFind = subString.Find(";");
					subStringAux = subString.Substring(0, subIndiceFind);
					subString = subString.Substring(subIndiceFind + 1, subIndiceLast - subIndiceFind);

					//if (j == 1)
					//{//País
						//insDataCB.ProvincePais2 = subStringAux.Trim();
						//insDataCB.ProvinceDepartamento2.listID = insDataCB.ProvincePais2;
					//}
				   if (j == 1)
					{//Depatamento
						insDataCB.ProvinceDepartament = subStringAux.Trim();
					}
					else if (j == 2)
					{//District
						insDataCB.ProvinceDistrict2 =  insDataCB.ProvinceDepartament2.content.Replace(" ", "") + subStringAux.Trim().Replace(" ", "");
					}
					else if (j == 3)
					{
					  insDataCB.ProvinceCod = subStringAux.Trim();	
					}
					else if (j == 4)
					{//ProvinceID
						insDataCB.ProvinceDesc = subStringAux.Trim();	
						subString = subString.Replace("\r", "");
						//subString = subString.Replace(" ", "");													
						insDataCB.ProvinceDesc = subString.Trim();

						var insLoad = BOProvince.Create(insDataCB);
						if (!insLoad.IsSet())
						{
							raise msj.Create("E", msgPosition + i.ToString().Trim() + msgError); 
						}
						else
						{
							contador = contador + 1;
							this.cargado = true;
						}
						insDataCB.Clear();
						subIndiceFind = -1;
					}
				}//fin while(subIndiceFind != -1){ 
			}//fin if (this.objeto == CLMassLReceiverCodeCode.CO_CLIEProvince)

													
		}//fin if(indiceFind != -1){
	}//fin while(indiceFind != -1){
	raise msj.Create("I", msgloaded + contador.ToString().Trim() + msgpositions); 
}
else
{
	this.isConsistent = false;
	raise msj.Create("E", msgAttach);
}
}
else{
	this.isConsistent = false;
	raise msj.Create("E", msgObject);
}

