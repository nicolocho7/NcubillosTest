/*
	---------------------------------------------------------------------
	 Consume WS TCI 
	-------------------------------------------------------------------- 
	PROGRAMA   : ElectronicInvoice TCI-BIOPAS
	DESCRIPCION: Send Invoice to TCI and Get any Response
	AUTOR      : Kevin Julian Ferrucho Español 
	FECHA      : 09/12/2019
	*********************************************************************
                        LOG DE MODIFICACIONES
	*********************************************************************
	Fecha      Programador    Descripción                           ID
	_________  ____________  ____________________________________ ____ 
*/
import ABSL;
import AP.Common.GDT as apCommonGDT;
import BASIS.Global as basis;
import AP.FO.BusinessPartner.Global;
import AP.FinancialAccounting.Global;
import AP.FO.TaxArrangement.Global;

var insCompanyConfig;
var strLine = "";
this.result.Delete();
//Messages definition
var LanguageCode = Context.GetCurrentUserLanguage().ToString();
var msgCompany = "Por favor ingresar Empresa.";
var msgSetBook = "Por favor ingresar Set of Book";
var msgLimitDate = "Por favor ingresar la Fecha Inicial";
var msgDateInitial = "Por favor ingresar fecha inicial";
var msgNotConfig = "No hay datos de configuraci?n de esta empresa para el informe.";
var msgNotData = "La consulta no arroj? datos v?ldos para este informe.";

if (LanguageCode != "ES") {
	msgCompany = "Please enter the Company.";
	msgSetBook = "Please enter the Set of Book";
	msgLimitDate = "Please enter Limit Date.";
	msgDateInitial = "Please enter Date Initial";
	msgNotConfig = "No configuration data for the company fro the report.";
	msgNotData = "The query not returns valid data for this report.";
}

//Company Validation

var xmlResult;



var txtstring = "";
//Get Month
var TemDateToM = this.EDateInitial.GetMonth();
switch (TemDateToM)
{
	case "01" { TemDateToM = "1"; }
	case "02" { TemDateToM = "2"; }
	case "03" { TemDateToM = "3"; }
	case "04" { TemDateToM = "4"; }
	case "05" { TemDateToM = "5"; }
	case "06" { TemDateToM = "6"; }
	case "07" { TemDateToM = "7"; }
	case "08" { TemDateToM = "8"; }
	case "09" { TemDateToM = "9"; }
}

var qryIdSolution = BOConfigurationIDSolution.QueryByElements;
var QryParamsSolution = qryIdSolution.CreateSelectionParams();
	//QryParamsSolution.Add(qryIdSolution.Inactive,"I", "EQ", "false");
var ResultSoluton = qryIdSolution.Execute(QryParamsSolution).GetFirst();
var IDSolution;
if(ResultSoluton.IsSet()){
	IDSolution = ResultSoluton.IDSolution.Trim();
}
//=================================Variables for WebService ======================\\
var ComunicationScenario = "CS_ReportActivosFijos";
var ServiceName = "EWSI_ActivosRevaluados";
var HttpMetod = "GET";
var ContentType = "";
var Body = "";
var ResourceName = "ana_businessanalytics_analytics.svc/RP"+IDSolution+"_862CE2BB1CCB3CQueryResults?";
	ResourceName = "";
var parameter : NameAndValue;
var parameters : collectionof NameAndValue;
var HeaderParameter : collectionof NameAndValue;

//--------------------------------Filter------------------------------------------
var StringValue = "CCOMPANY eq '" + this.CompanyID + 
				  "' and CSETOFBKS eq '" + this.SetOfBooksID.content + 
				  "' and CFISCYEAR {0} " + this.EDateInitial.GetYear() + 
				  " and CVALVIEW_ID eq '1'"+
				  " and CFXA_MASTER_ID eq '"+this.Consolidation+"'"; 

if(this.RunPreviousYears){
	StringValue = StringValue.Replace("{0}","le");
}else{
	StringValue = StringValue.Replace("{0}","eq");
}

raise msj.Create("W", this.SetOfBooksID.content);

//--------------------------------Parameters-------------------_--------------------
parameter.Name = "$select";  
parameter.Value = "CFISCYEAR,CACCDOCUUID,CACCDOCITEMNO,CFXA_MASTER_ID,CGLACCT,KCAMTCOMP,CFIRST_ACQ_DATE,TFXA_UUID,CGLMOVEMENTTYPE,CACCDOCTYPE,CLC_STAT";//C"+IDSolution+"_56C39B48E0,CACCDOCTYPE";
parameters.Add(parameter);   
parameter.Name = "$filter";
parameter.Value = StringValue;
parameters.Add(parameter);
parameter.Name = "$orderby";
parameter.Value = "CFXA_MASTER_ID desc";
parameters.Add(parameter);  
parameter.Name = "$top";
parameter.Value = "300";
parameters.Add(parameter);
	
//	
var ws_result = WebServiceUtilities.ExecuteRESTService(ComunicationScenario,ServiceName,HttpMetod,ResourceName,parameters,HeaderParameter,ContentType,Body);
var Content = ws_result.Content;
var strData = "";
var sCurrency = "";
var sLocalCurrency = "";
var decAmount : DataType::DecimalValue;
var otherAmount : DataType::apCommonGDT:Amount;
	
var xname : LANGUAGEINDEPENDENT_LONG_Name;
var xtype : DocumentTypeCode;
var xdesc : Description;
var xbinary : basis:BinaryObject;
	
xname = "Resultado.txt ";
xtype.content = "10001";
xtype.listID = "10296";
xbinary.mimeCode = "text/plain";
xbinary.content = Binary.ParseFromString(Content + "\n\n"+ ws_result.RequestURL);
this.ReportsAttachments.CreateFile(xtype, xname, xname, xdesc, xbinary);

xmlResult = Library::RLStrings.XMLToArray(Content);
var Contador = 1;
	
var Campo1 = "";
var Campo2 = "";
var Campo3 = "";
var Campo4 = "";
var Campo5 = "";
var Campo6 = "";
var Campo7 = "";
var Campo8 = "";
var Campo9 = "";
var Campo10 = "";
var Campo11 = "";
var Campo12 = "";
var Campo13 = "";
var Campo14 = "";
var Campo15 = "";
var Campo16 = "";
var Campo17 = "";
var Campo18 = "";
var Campo19 = "";
var Campo20 = "";
var Campo21 = "";
var Campo22 = "";
var Campo23 = "";
var Campo24 = "";
var Campo25 = "";
var Campo26 = "";
var Campo27 = "";
var Campo28 = "";
var Campo29 = "";
var Campo30 = "";
var Campo31 = "";
var Campo32 = "";
var Campo33 = "";
var Campo34 = "";
var Campo35 = "";
var Campo36 = "";
var substringr = "";
var Campovalidation = "";	
var checkr=false;
var Counter = 0;

foreach (var RegistroCompras in xmlResult){
	Campovalidation = "C"+Library::RLStrings.GetElementByName(RegistroCompras.String, "CFXA_MASTER_ID").Trim();
	var validationAF = this.result.Where(n => n.campo3 == Campovalidation).GetFirst(); 
	if(validationAF.IsSet()){
		var AdocType = Library::RLStrings.GetElementByName(RegistroCompras.String, "CACCDOCTYPE").Trim();
		var TipoMovimiento = Library::RLStrings.GetElementByName(RegistroCompras.String, "CGLMOVEMENTTYPE").Trim();
		var NumericAmmtra = Library::RLStrings.GetElementByName(RegistroCompras.String, "KCAMTCOMP").Trim();
		if(ABSL:Numeric.IsNumeric(NumericAmmtra)){
			var ejecucion = Library::RLStrings.GetElementByName(RegistroCompras.String, "CFISCYEAR").Trim();
			if(ejecucion != this.EDateInitial.GetYear().Trim()){
				var Numeric = ABSL:Numeric.ParseFromString(NumericAmmtra); 
				if(ABSL:Numeric.ParseFromString(NumericAmmtra) > 0){
					Campo14= Numeric.RoundToString(2,true);
					Campo28 = "0.00";
				}else{
					Campo14= "0.00";
					Campo28 = Numeric.RoundToString(2,true);
				}
				Campo36 = "1";
				Campo18 = "0.00";
				Campo15="0.00";
				Campo29="0.00";
				Campo17="0.00";
				Campo18= "0.00";
				Campo31= "0.00";
			}else{
		
				var Numeric = ABSL:Numeric.ParseFromString(NumericAmmtra); 
				var Numerico = 0;

				if(AdocType == "0059" || AdocType == "9059"){
					var suma = ABSL:Numeric.ParseFromString(Campo18) + ABSL:Numeric.ParseFromString(NumericAmmtra);
					Campo18= suma.RoundToString(2,true);
				}

				if(TipoMovimiento == "900"){
					var suma = ABSL:Numeric.ParseFromString(Campo14) + ABSL:Numeric.ParseFromString(NumericAmmtra);
					Campo14= suma.RoundToString(2,true);
				}else{
					Campo14="0.00";
					Numerico = Numerico +1;
				}
				if(TipoMovimiento == "100"){
					var suma = ABSL:Numeric.ParseFromString(Campo15) + ABSL:Numeric.ParseFromString(NumericAmmtra);
					Campo15= suma.RoundToString(2,true);
				}else{
					Campo15="0.00";
					Numerico = Numerico +1;
				}
				if(TipoMovimiento == "460" || TipoMovimiento == "450"){
					var suma = ABSL:Numeric.ParseFromString(Campo29) + ABSL:Numeric.ParseFromString(NumericAmmtra);
					Campo29= suma.RoundToString(2,true);
					var vStatus = Library::RLStrings.GetElementByName(RegistroCompras.String, "CLC_STAT").Trim();
					if(vStatus == "4"){
						Campo29 = "0.00";
						suma = ABSL:Numeric.ParseFromString(Campo30) + ABSL:Numeric.ParseFromString(NumericAmmtra);
						Campo30 = suma.RoundToString(2,true);
					}
				}else{
					Campo29="0.00";
					Numerico = Numerico +1;
				}
				if(TipoMovimiento == "350" ){
					var suma = ABSL:Numeric.ParseFromString(Campo17) + ABSL:Numeric.ParseFromString(NumericAmmtra);
					Campo17= Numeric.RoundToString(2,true);
				}else{
					Campo17="0.00";
					Numerico = Numerico +1;
				}
				if(TipoMovimiento == "400"){
					var suma = ABSL:Numeric.ParseFromString(Campo18) + ABSL:Numeric.ParseFromString(NumericAmmtra);
					Campo18= suma.RoundToString(2,true);
				}else{
					Campo18="0.00";
					Numerico = Numerico +1;
				}
				if(Numerico == 5){
					var suma = ABSL:Numeric.ParseFromString(Campo31) + ABSL:Numeric.ParseFromString(NumericAmmtra);
					Campo31= suma.RoundToString(2,true);
				}else{
					Campo31= "0.00";
				}
			}
		}
		//Campo16 = "0.00";
		//Campo17 = "0.00";
		Campo18 = "0.00";
		Campo19 = "0.00";
		Campo20 = "0.00";
		Campo21 = "0.00";
		Campo22 = "0.00";
		Campo23 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CFIRST_ACQ_DATE").Trim();
		Campo23 = Campo23.Substring(8, 2) +"/"+ Campo23.Substring(5, 2) +"/"+ Campo23.Substring(0, 4);
		Campo24 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CFIRST_ACQ_DATE").Trim();
		Campo24 = Campo24.Substring(8, 2) +"/"+ Campo24.Substring(5, 2) +"/"+ Campo24.Substring(0, 4);
		Campo24=Campo23;
		Campo25 = "1";
		Campo26 = "/";
		//Campo27 = "0.00";
		Campo30 = "0.00";
		//Campo31 = "0.00";
		Campo32 = "0.00";
		Campo33 = "0.00";
		Campo34 = "0.00";
		Campo35 = "0.00";
		
		validationAF.campo14 = Campo14;
		validationAF.campo15 = Campo15;
		validationAF.campo16 = Campo16;
		validationAF.campo17 = Campo17;
		validationAF.campo18 = Campo18;
		validationAF.campo19 = Campo19;
		validationAF.campo20 = Campo20;
		validationAF.campo21 = Campo21;
		validationAF.campo22 = Campo22;
		validationAF.campo23 = Campo23;
		validationAF.campo24 = Campo24;
		validationAF.campo25 = Campo25;
		validationAF.campo26 = Campo26;
		validationAF.campo27 = Campo27;
		validationAF.campo28 = Campo28;
		validationAF.campo29 = Campo29;
		validationAF.campo30 = Campo30;
		validationAF.campo31 = Campo31;
		validationAF.campo32 = Campo32;
		validationAF.campo33 = Campo33;
		validationAF.campo34 = Campo34;
		validationAF.campo35 = Campo35;
		validationAF.campo36 = Campo36;

	}else{
		
		var table : elementsof this.result;
		//Declaracion de variables campos
		 Campo1 = "";
		 Campo2 = "";
		 Campo3 = "";
		 Campo4 = "";
		 Campo5 = "";
		 Campo6 = "";
		 Campo7 = "";
		 Campo8 = "";
		 Campo9 = "";
		 Campo10 = "";
		 Campo11 = "";
		 Campo12 = "";
		 Campo13 = "";
		 Campo14 = "";
		 Campo15 = "";
		 Campo16 = "";
		 Campo17 = "";
		 Campo18 = "";
		 Campo19 = "";
		 Campo20 = "";
		 Campo21 = "";
		 Campo22 = "";
		 Campo23 = "";
		 Campo24 = "";
		 Campo25 = "";
		 Campo26 = "";
		 Campo27 = "";
		 Campo28 = "";
		 Campo29 = "";
		 Campo30 = "";
		 Campo31 = "";
		 Campo32 = "";
		 Campo33 = "";
		 Campo34 = "";
		 Campo35 = "";
		 Campo36 = "";
	//asignacion de campos del Data Source y Logica
		Campo1 = this.EDateInitial.GetYear()+"0000";
		Campo2 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CACCDOCUUID").Trim();
		Campo3 = "C";
		var Campo3Sub = Library::RLStrings.GetElementByName(RegistroCompras.String, "CFXA_MASTER_ID").Trim();
		Campo3 = Campo3 + Campo3Sub;
		Campo4 = "9";
		Campo5 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CFXA_MASTER_ID").Trim();
		Campovalidation = Campo3;
		Campo11="-";
		Campo12="-";
		Campo13="-";
		Campo27 = "0.00";
		var queryFix = FixedAsset.QueryByMasterData;
		var selectionParamsFix = queryFix.CreateSelectionParams();
		selectionParamsFix.Add(queryFix.Key.MasterFixedAssetID.content, "I", "EQ", Campo5);
		selectionParamsFix.Add(queryFix.CompanyID, "I", "EQ", this.CompanyID);
		var resultDataFix = queryFix.Execute(selectionParamsFix).GetFirst();
		if(resultDataFix.IsSet()){
			if(!resultDataFix.zMarcaActivo.IsInitial()){
				Campo11=resultDataFix.zMarcaActivo;
			}
			if(!resultDataFix.zModeloActivo.IsInitial()){
				Campo12=resultDataFix.zModeloActivo;
			}
			if(!resultDataFix.zNumeroActivo.IsInitial()){
				Campo13=resultDataFix.zNumeroActivo;
			}
			if(resultDataFix.SetOfBooks.Count()>0){
				var Set = resultDataFix.SetOfBooks.Where(n=>n.SetOfBooksID.content == this.SetOfBooksID.content).GetFirst();
				if(Set.IsSet()){
					var Value = Set.SetOfBooksValuationView.Where(n=>n.SetOfBooksAssetValuationViewID.content =="001").GetFirst();
					if(Value.IsSet()){
						if(Value.SetOfBooksValuationViewParameters.Count()>0){
							var ValueUnik = Value.SetOfBooksValuationViewParameters.GetFirst();
							var Meses = ValueUnik.UsefulLifeAccountingPeriodsTotalNumberValue;
							var Year = (ValueUnik.UsefulLifeFiscalYearsTotalNumberValue * 12);
							if(!Meses.IsInitial() || !Year.IsInitial() || ((Meses + Year) > 0)){
								var Suma = ((1 / (Meses + Year))*100).RoundToString(2,true);
								Campo27 =Suma.Replace(",","."); 
							}
						}
				
					}
				
				}
			}
		}


		var AdocType = Library::RLStrings.GetElementByName(RegistroCompras.String, "CACCDOCTYPE").Trim();
		Campo6 = "0000000000000000";
		//Campo6 = Library::RLStrings.GetElementByName(RegistroCompras.String, "C"+IDSolution+"_56C39B48E0").Trim();;
		if(Campo6.IsInitial() || Campo6 == ""){
			Campo6 = "0000000000000000";
		}
		Campo7 = "2";
		Campo8 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CGLACCT").Trim();
		Campo9 = "9";
		Campo10 = Library::RLStrings.GetElementByName(RegistroCompras.String, "TFXA_UUID").Trim();
		var long10 = Campo10.Length();
		if (long10>40){
			Campo10 = Campo10.Substring(0,40);
			}
		Campo36 = "1";
		Campo28 = "0.00";
		var TipoMovimiento = Library::RLStrings.GetElementByName(RegistroCompras.String, "CGLMOVEMENTTYPE").Trim();
		var NumericAmmtra = Library::RLStrings.GetElementByName(RegistroCompras.String, "KCAMTCOMP").Trim();
		if(ABSL:Numeric.IsNumeric(NumericAmmtra)){
			var ejecucion = Library::RLStrings.GetElementByName(RegistroCompras.String, "CFISCYEAR").Trim();
			if(ejecucion != this.EDateInitial.GetYear().Trim()){
				var Numeric = ABSL:Numeric.ParseFromString(NumericAmmtra); 
				if(ABSL:Numeric.ParseFromString(NumericAmmtra) > 0){
					Campo14= Numeric.RoundToString(2,true);
					Campo28 = "0.00";
				}else{
					Campo14= "0.00";
					Campo28 = Numeric.RoundToString(2,true);
				}
				Campo36 = "1";
				Campo18 = "0.00";
				Campo15="0.00";
				Campo29="0.00";
				Campo17="0.00";
				Campo18= "0.00";
				Campo31= "0.00";
			}else{
		
				var Numeric = ABSL:Numeric.ParseFromString(NumericAmmtra); 
				var Numerico = 0;

				if(AdocType == "0059" || AdocType == "9059"){
					Campo18= Numeric.RoundToString(2,true);
				}

				if(TipoMovimiento == "900"){
					Campo14= Numeric.RoundToString(2,true);
				}else{
					Campo14="0.00";
					Numerico = Numerico +1;
				}
				if(TipoMovimiento == "100"){
					Campo15= Numeric.RoundToString(2,true);
				}else{
					Campo15="0.00";
					Numerico = Numerico +1;
				}
				if(TipoMovimiento == "460" || TipoMovimiento == "450"){
					Campo29= Numeric.RoundToString(2,true);
					var vStatus = Library::RLStrings.GetElementByName(RegistroCompras.String, "CLC_STAT").Trim();
					if(vStatus == "4"){
						Campo29 = "0.00";
						Campo30 = Numeric.RoundToString(2,true);
					}
				}else{
					Campo29="0.00";
					Numerico = Numerico +1;
				}
				if(TipoMovimiento == "350" ){
					Campo17= Numeric.RoundToString(2,true);
				}else{
					Campo17="0.00";
					Numerico = Numerico +1;
				}
				if(TipoMovimiento == "400"){
					Campo18= Numeric.RoundToString(2,true);
				}else{
					Campo18="0.00";
					Numerico = Numerico +1;
				}
				if(Numerico == 5){
					Campo31= Numeric.RoundToString(2,true);
				}else{
					Campo31= "0.00";
				}
			}
		}else{
			Campo14="0.00";
			Campo15="0.00";
			Campo17 = "0.00";
			Campo18 = "0.00";
			Campo29="0.00";
			Campo31 = "0.00";
		}
		Campo16 = "0.00";
		//Campo17 = "0.00";
		//Campo18 = "0.00";
		Campo19 = "0.00";
		Campo20 = "0.00";
		Campo21 = "0.00";
		Campo22 = "0.00";
		Campo23 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CFIRST_ACQ_DATE").Trim();
		Campo23 = Campo23.Substring(8, 2) +"/"+ Campo23.Substring(5, 2) +"/"+ Campo23.Substring(0, 4);
		Campo24 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CFIRST_ACQ_DATE").Trim();
		Campo24 = Campo24.Substring(8, 2) +"/"+ Campo24.Substring(5, 2) +"/"+ Campo24.Substring(0, 4);
		Campo24=Campo23;
		Campo25 = "1";
		Campo26 = "/";
		//Campo27 = "0.00";
		Campo30 = "0.00";
		//Campo31 = "0.00";
		Campo32 = "0.00";
		Campo33 = "0.00";
		Campo34 = "0.00";
		Campo35 = "0.00";
		table.campo1 = Campo1;
		table.campo2 = Campo2;
		table.campo3 = Campo3;
		table.campo4 = Campo4;
		table.campo5 = Campo5;
		table.campo6 = Campo6;
		table.campo7 = Campo7;
		table.campo8 = Campo8;
		table.campo9 = Campo9;
		table.campo10 = Campo10;
		table.campo11 = Campo11;
		table.campo12 = Campo12;
		table.campo13 = Campo13;
		table.campo14 = Campo14;
		table.campo15 = Campo15;
		table.campo16 = Campo16;
		table.campo17 = Campo17;
		table.campo18 = Campo18;
		table.campo19 = Campo19;
		table.campo20 = Campo20;
		table.campo21 = Campo21;
		table.campo22 = Campo22;
		table.campo23 = Campo23;
		table.campo24 = Campo24;
		table.campo25 = Campo25;
		table.campo26 = Campo26;
		table.campo27 = Campo27;
		table.campo28 = Campo28;
		table.campo29 = Campo29;
		table.campo30 = Campo30;
		table.campo31 = Campo31;
		table.campo32 = Campo32;
		table.campo33 = Campo33;
		table.campo34 = Campo34;
		table.campo35 = Campo35;
		table.campo36 = Campo36;
		this.result.Create(table);
	}
	
}

foreach(var result in this.result){
	txtstring =  txtstring + result.campo1+ "|" +result.campo2+"|" +result.campo3+"|" +result.campo4+"|" +result.campo5+"|" +result.campo6+"|" 
		+result.campo7+"|" +result.campo8+"|" +result.campo9+"|" + result.campo10+"|" +result.campo11+"|" +result.campo12+"|" +result.campo13+"|" 
		+result.campo14+"|" +result.campo15+"|" +result.campo16+"|" +result.campo17+"|" +result.campo18+"|" +result.campo19+"|" +result.campo20+"|"
		+result.campo21+"|" +result.campo22+"|" +result.campo23 + "|" + result.campo24+"|" + result.campo25+"|"+result.campo26+"|"
		+result.campo27+"|" +result.campo28+"|" +result.campo29 + "|" + result.campo30+"|" + result.campo31+"|"+result.campo32+"|"
		+result.campo33+"|" +result.campo34+"|" +result.campo35 + "|" + result.campo36 +"|" +"\r\n";
}
var ValidaReporte ="";
if(txtstring.IsInitial()){
	ValidaReporte ="0";
}else{
	ValidaReporte = "1";
}
var qCompanyTax = CompanyTaxArrangement.QueryByElements;
var pCompanyTax = qCompanyTax.CreateSelectionParams();
	pCompanyTax.Add(qCompanyTax.CompanyID,"I","EQ",this.CompanyID.RemoveLeadingZeros());
var insCompanyTax = qCompanyTax.Execute(pCompanyTax).GetFirst();
var vNit="";
if(insCompanyTax.IsSet()){
	if(insCompanyTax.TaxIdentificationNumber.Count() > 0){
		vNit = insCompanyTax.TaxIdentificationNumber.GetFirst().PartyTaxID.content;
	}
}


var NameReport = "LE"+ vNit + this.EDateInitial.GetYear()+ "00"+ "00070100001"+ValidaReporte+"11";
xname = NameReport + ".txt";
xtype.content = "10001";
xtype.listID = "10296";
xbinary.mimeCode = "text/plain";
xbinary.content = Binary.ParseFromString(txtstring);
this.ReportsAttachments.CreateFile(xtype, xname, xname, xdesc, xbinary);
