import ABSL as absl;
import AP.Common.GDT as apCommonGDT;
import BASIS.Global as basis;
import AP.FO.BusinessPartner.Global;
import AP.FO.TaxArrangement.Global;

var insCompanyConfig;
var strLine = "";

//Messages definition
var LanguageCode = Context.GetCurrentUserLanguage().ToString();
var msgCompany = "Por favor ingresar Empresa.";
var msgSetBook = "Por favor ingresar Set of Book";
var msgLimitDate = "Por favor ingresar la Fecha Inicial";
var msgDateInitial = "Por favor ingresar fecha inicial";
var msgNotConfig = "No hay datos de configuraci?n de esta empresa para el informe.";
var msgNotData = "La consulta no arroj? datos v?ldos para este informe.";

if (LanguageCode != "ES") {
msgCompany = "Please enter the Company.";
msgSetBook = "Please enter the Set of Book";
msgLimitDate = "Please enter Limit Date.";
msgDateInitial = "Please enter Date Initial";
msgNotConfig = "No configuration data for the company fro the report.";
msgNotData = "The query not returns valid data for this report.";
}

var xmlResult;
var txtstring="";
while(true){
	if (this.CompanyID.IsInitial()) {break;}
	if (this.EDateInitial.IsInitial()) {break;}
	//Caluclar los primeros dias 
	var TemDateToM = this.EDateInitial.GetMonth();
	switch (TemDateToM)
	{
		case "01" { TemDateToM = "1"; }
		case "02" { TemDateToM = "2"; }
		case "03" { TemDateToM = "3"; }
		case "04" { TemDateToM = "4"; }
		case "05" { TemDateToM = "5"; }
		case "06" { TemDateToM = "6"; }
		case "07" { TemDateToM = "7"; }
		case "08" { TemDateToM = "8"; }
		case "09" { TemDateToM = "9"; }
	}
	var xname : LANGUAGEINDEPENDENT_LONG_Name;
	var xtype : DocumentTypeCode;
	var xdesc : Description;
	var xbinary : basis:BinaryObject;

	var qryIdSolution = BOConfigurationIDSolution.QueryByElements;
	var QryParamsSolution = qryIdSolution.CreateSelectionParams();
		//QryParamsSolution.Add(qryIdSolution.Inactive,"I", "EQ", "false");
	var ResultSoluton = qryIdSolution.Execute(QryParamsSolution).GetFirst();
	var IDSolution;
	if(ResultSoluton.IsSet()){
		IDSolution = ResultSoluton.IDSolution.Trim();
	}
	//=================================Variables para WebService ======================\\
	var ComunicationScenario = "CS_ReportActivosFijos";
	var ServiceName = "EWSI_ActivosFijos";
	var HttpMetod = "GET";
	var ContentType = "";
	var Body = "";
	var ResourceName = "ana_businessanalytics_analytics.svc/RP"+IDSolution+"_393CB366565A34QueryResults?";
	    ResourceName = "";
	var parameter : NameAndValue;
	var parameters : collectionof NameAndValue;
	var HeaderParameter : collectionof NameAndValue;
	//=================================================================================\\
	//FILTRO DINAMICO 
	var NameReport;
	//var YearDateTo = ABSL:Numeric.ParseFromString(TemDateToM);
	var StringValue = "CGLACCT_TC eq 'ASSET' and (CGLMOVEMENTTYPE eq '100' or CGLMOVEMENTTYPE eq '450' or CGLMOVEMENTTYPE eq '400' or CGLMOVEMENTTYPE eq '900' or CGLMOVEMENTTYPE eq '350') and CCURRTRA ne 'pen' and CCOMPANY eq '" + this.CompanyID + 
					"' and CSETOFBKS eq '" + this.SetOfBooksID.content + "' and CFISCYEAR eq " + this.EDateInitial.GetYear() + " and CVALVIEW_ID eq '1'";//+ this.FixedValuation + "'";
	parameter.Name = "$select";  
	parameter.Value = "CFISCYEAR,CACC_DOC_UUID,CCLOSESTEP,CGLACCT_TC,CGLMOVEMENTTYPE,CCURRTRA,CACC_DOC_IT_UUID,CFIX_ASSET_UUID,CPOSTING_DATE,KCAMTTRA,KCAMTCOMP,CFIRST_ACQ_DATE";
	
	parameters.Add(parameter); 
	parameter.Name = "$filter";
	parameter.Value = StringValue;
	parameters.Add(parameter);  
	parameter.Name = "$top";
	parameter.Value = "99999";
	parameters.Add(parameter);
	var ws_result = WebServiceUtilities.ExecuteRESTService(ComunicationScenario,ServiceName,HttpMetod,ResourceName,parameters,HeaderParameter,ContentType,Body);
	var Content = ws_result.Content;  
	var strData = "";
	var sCurrency = "";
	var sLocalCurrency = "";
	var decAmount : DataType::DecimalValue;
	var otherAmount : DataType::apCommonGDT:Amount;
	xname = "Resultado.txt ";
	xtype.content = "10001";
	xtype.listID = "10296";
	xbinary.mimeCode = "text/plain";
	xbinary.content = Binary.ParseFromString(Content + "\n\n"+ ws_result.RequestURL);
	this.ReportsAttachments.CreateFile(xtype, xname, xname, xdesc, xbinary);
	xmlResult = Library::RLStrings.XMLToArray(Content);
	var Contador = 1;
	if (xmlResult.Count() == 0) { break; }
	var NumeroCuent = "";
	var Materialid="";
	var SumCantidad = 0.00;
	var SumValor = 0.00;
	var Campo1="";
	var Campo2="";
	var Campo3="";
	var Campo4="";
	var Campo5="";
	var Campo6="";
	var Campo7="";
	var Campo8="";
	var Campo9="";
	var Campo10="";
	var Campo11="";
	var Campo12="";
	var Campo13="";
	var Campo14="";
	var Campo15="";
	var CampoValidacion;
	foreach (var RegistroCompras in xmlResult){
		 Campo1="";
		 Campo2="";
		 Campo3="";
		 Campo4="";
		 Campo5="";
		 Campo6="";
		 Campo7="";
		 Campo8="";
		 Campo9="";
		 Campo10="";
		 Campo11="";
		 Campo12="";
		 Campo13="";
		 Campo14="";
		 Campo15="";
		 CampoValidacion="";
		 CampoValidacion = Library::RLStrings.GetElementByName(RegistroCompras.String, "CCURRTRA").Trim();
		 if((!CampoValidacion.IsInitial() || CampoValidacion != "") && !	this.Coin.IsInitial()){
			Campo1 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CFISCYEAR").Trim();
			Campo1 = Campo1 + "0000";
			Campo2 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CACC_DOC_UUID").Trim();
			Campo3 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CCLOSESTEP").Trim();
			switch (Campo3)
			{
				case "01","001"  { Campo3 = "A"; }
				case "010", "015", "020" { Campo3 = "M"; }
				case "080", "990", "991" { Campo3 = "C"; }
			}
			var SubCampo3 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CACC_DOC_IT_UUID").Trim();
			Campo3 = Campo3 + SubCampo3;
			Campo4 = "9";
			Campo5 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CFIX_ASSET_UUID").Trim();
			Campo6 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CFIRST_ACQ_DATE").Trim();
			if(Campo6.IsInitial() || Campo6 == ""){
				Campo6 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CPOSTING_DATE").Trim();
			}
			Campo6 = Campo6.Substring(8, 2) +"/"+ Campo6.Substring(5, 2) +"/"+ Campo6.Substring(0, 4);
			Campo7 = Library::RLStrings.GetElementByName(RegistroCompras.String, "KCAMTTRA").Trim();
			Campo8 = Library::RLStrings.GetElementByName(RegistroCompras.String, "KCAMTCOMP").Trim();
			var Numeric7 = 0;
			var NumericCurr = 0;
			if(absl:Numeric.IsNumeric(Campo7) && absl:Numeric.IsNumeric(Campo8)){
				Numeric7 =absl:Numeric.ParseFromString(Campo7);
				NumericCurr =absl:Numeric.ParseFromString(Campo8);
				if(Numeric7 > 0){
					Campo7=Numeric7.RoundToString(2,true);
					if(NumericCurr > 0){
						var Result = NumericCurr/Numeric7;
						Campo8 = Result.RoundToString(3,true);
					}else{
						Campo8="1.000";
					}
					
				}else{
					Campo7="0.00";
					Campo8="1.000";
				}
			}else{
				Campo7="0.00";
				Campo8 = "1.000";
			}
			var Numeric8 = 1;
			if(absl:Numeric.IsNumeric(Campo8)){
				Numeric8 = absl:Numeric.ParseFromString(Campo8); 
			}
			Campo9 = Library::RLStrings.GetElementByName(RegistroCompras.String, "KCAMTCOMP").Trim();
			var Numeric9 = 0;
			if(absl:Numeric.IsNumeric(Campo9)){
				Numeric9 =absl:Numeric.ParseFromString(Campo9); 
				Campo9 = Numeric9.RoundToString(2,true);
			}
			
			
			Campo10 = this.Coin.Trim();
			var Numeric10 = 0;
			if(absl:Numeric.IsNumeric(Campo10)){
				Numeric10 =absl:Numeric.ParseFromString(Campo10); 
			}
			Campo11 = ((Numeric10 -Numeric8 ) *  Numeric7).RoundToString(2,true);
			
			var CGLMOVEMENTTYPE = Library::RLStrings.GetElementByName(RegistroCompras.String, "CGLMOVEMENTTYPE").Trim();
			if(CGLMOVEMENTTYPE == "450" ){
				Campo12 = Library::RLStrings.GetElementByName(RegistroCompras.String, "KCAMTCOMP").Trim();
			}else{
				Campo12 ="0.00";
			}
			if(CGLMOVEMENTTYPE == "350" ){
				Campo13 = Library::RLStrings.GetElementByName(RegistroCompras.String, "KCAMTCOMP").Trim();
			}else{
				Campo13 ="0.00";
			}
			if(CGLMOVEMENTTYPE == "400" ){
				Campo14 = Library::RLStrings.GetElementByName(RegistroCompras.String, "KCAMTCOMP").Trim();
			}else{
				Campo14 ="0.00";
			}
			if(CGLMOVEMENTTYPE != "100" || CGLMOVEMENTTYPE != "900"){
				Campo7 = "0.00";
				Campo9 = "0.00";
			}
			//Campo13 = "0.00";
			//Campo14= "0.00";
			Campo15 ="1";
			txtstring = txtstring + Campo1+ "|" +Campo2+"|" +Campo3+"|" +Campo4+"|" +Campo5+"|" +Campo6+"|" 
						+Campo7+"|" +Campo8+"|" +Campo9+"|" + Campo10.Replace(",",".")+"|" +Campo11+"|" + Campo12+"|" +Campo13+"|"
						+ Campo14+"|" +Campo15+"|"+"\r\n";
		 }
	}
	var qCompanyTax = CompanyTaxArrangement.QueryByElements;
	var pCompanyTax = qCompanyTax.CreateSelectionParams();
		pCompanyTax.Add(qCompanyTax.CompanyID,"I","EQ",this.CompanyID.RemoveLeadingZeros());
	var insCompanyTax = qCompanyTax.Execute(pCompanyTax).GetFirst();
	var vNit="";
	if(insCompanyTax.IsSet()){
		if(insCompanyTax.TaxIdentificationNumber.Count() > 0){
			vNit = insCompanyTax.TaxIdentificationNumber.GetFirst().PartyTaxID.content;
		}
	}
	var ContMont = this.EDateInitial.GetMonth().Length();
	var Mes1;
	if(ContMont<2){
		Mes1 = "0" + this.EDateInitial.GetMonth();
	}else{
		Mes1 = this.EDateInitial.GetMonth();
	}
	var Indicator = "0";
	if(!txtstring.IsInitial()){
		Indicator = "1";
	}
	NameReport = "LE"+ vNit + this.EDateInitial.GetYear()+ "00"+ "00070300001"+Indicator+"11";
	xname = NameReport + ".txt";
	xtype.content = "10001";
	xtype.listID = "10296";
	xbinary.mimeCode = "text/plain";
	xbinary.content = Binary.ParseFromString(txtstring);
	this.ReportsAttachments.CreateFile(xtype, xname, xname, xdesc, xbinary);
	break;
}







//import ABSL;
//import AP.Common.GDT as apCommonGDT;
//import BASIS.Global as basis;
//import AP.FO.BusinessPartner.Global;
//import AP.FinancialAccounting.Global;
//
//var insCompanyConfig;
//var strLine = "";
//
////Messages definition
//var LanguageCode = Context.GetCurrentUserLanguage().ToString();
//var msgCompany = "Por favor ingresar Empresa.";
//var msgSetBook = "Por favor ingresar Set of Book";
//var msgLimitDate = "Por favor ingresar la Fecha Inicial";
//var msgDateInitial = "Por favor ingresar fecha inicial";
//var msgNotConfig = "No hay datos de configuraci?n de esta empresa para el informe.";
//var msgNotData = "La consulta no arroj? datos v?ldos para este informe.";
//
//if (LanguageCode != "ES") {
	//msgCompany = "Please enter the Company.";
	//msgSetBook = "Please enter the Set of Book";
	//msgLimitDate = "Please enter Limit Date.";
	//msgDateInitial = "Please enter Date Initial";
	//msgNotConfig = "No configuration data for the company fro the report.";
	//msgNotData = "The query not returns valid data for this report.";
//}
//
////Company Validation
//
//
////Validar campo 10 tine que ser obligatorio para la ejecucion
//var xmlResult;
//
//
//
//var txtstring = "";
//var serviceID = "";  
//var parameter : NameAndValue;
//var parameters : collectionof NameAndValue;
////Caluclar los primeros dias 
//
//if(this.Coin.IsInitial()){
	//raise msj.Create("E", "Campo Tipo de Cambio Obligatorio");
//
//}else{
		////FILTRO DINAMICO 
//
		////var YearDateTo = ABSL:Numeric.ParseFromString(TemDateToM);
	//var StringValue = "CCOMPANY_UUID eq '" + this.CompanyID + "' and CSETOFBKS eq '" + this.SetOfBooksID.content+"' and CFISCYEAR eq " + this.EDateInitial.GetYear();
//
//
	//serviceID = "PW00058";  
	//parameter.Name = "$select";  
	//parameter.Value = "CFIX_ASSET_UUID,CACC_DOC_UUID,CCLOSESTEP,CACCDOCTYPE,KCAMTCOMP,KCAMTTRA,CNOTE_HD";
	//parameters.Add(parameter);   
	//parameter.Name = "$filter";
	//parameter.Value = StringValue;
	//parameters.Add(parameter);  
	//
	//
	//
	//var ws_result = WebServiceUtilities.ExecuteWebService(serviceID, parameters);
	//var Content = ws_result.ResponseContent;  
	//var returnCode = ws_result.ReturnCode;  
	//var strData = "";
	//var sCurrency = "";
	//var sLocalCurrency = "";
	//var decAmount : DataType::DecimalValue;
	//var otherAmount : DataType::apCommonGDT:Amount;
	//
	//var xname : LANGUAGEINDEPENDENT_LONG_Name;
	//var xtype : DocumentTypeCode;
	//var xdesc : Description;
	//var xbinary : basis:BinaryObject;
	//
	//xname = "Resultado.txt ";
	//xtype.content = "10001";
	//xtype.listID = "10296";
	//xbinary.mimeCode = "text/plain";
	//xbinary.content = Binary.ParseFromString(Content);
	//this.ReportsAttachments.CreateFile(xtype, xname, xname, xdesc, xbinary);
	//
	//////
	//////
	////var xmlResult;
	//////var FechaAno = this.EDateInitial.GetYear();
	//////var FechaMes = this.EDateInitial.GetMonth();
	//////
	//xmlResult = Library::RLStrings.XMLToArray(Content);
	//var Contador = 1;
	//
	//
//
	//foreach (var RegistroCompras in xmlResult){
		////Declaracion de variables campos
		//var Campo1 = "";
		//var Campo2 = "";
		//var Campo3 = "";
		//var Campo4 = "";
		//var Campo5 = "";
		//var Campo6 = "";
		//var Campo7 = "";
		//var Campo8 = "";
		//var Campo9 = "";
		//var Campo10 = "";
		//var Campo11 = "";
		//var Campo12 = "";
		//var Campo13 = "";
		//var Campo14 = "";
		//var Campo15 = "";
		//var Campo16 = "";
	//
//
	////asignacion de campos del Data Source y Logica
		//Campo1 = this.EDateInitial.GetYear();
		//var Mes = this.EDateInitial.GetMonth();
		//if(Mes.Length() < 2){
			//Campo1 = Campo1+"0" + this.EDateInitial.GetMonth() ;
		//}else{
			//Campo1 = Campo1+this.EDateInitial.GetMonth();
		//}
		//Campo1 = this.EDateInitial.GetYear()+"0000";
		//Campo2 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CACC_DOC_UUID").Trim();
		//Campo3 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CCLOSESTEP").Trim();
		//switch (Campo3)
		//{
			//case "01" { Campo3 = "A"; }
			//case "010", "015", "020" { Campo3 = "M"; }
			//case "080", "990", "991" { Campo3 = "C"; }
		//}
		//Campo3 = Campo3 + "1";
		//Campo4 = "9";
		//Campo5 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CFIX_ASSET_UUID").Trim();
		//var Fecha6;
		////Campo con Qry
		//var queryFixed = FixedAsset.QueryByClassAndName;
		//// 2. Selection
		//var selectionParams = queryFixed.CreateSelectionParams();
		//selectionParams.Add(queryFixed.Key.ID.content, "I", "EQ", Campo5.Trim());
		//// Result
		//var resultData = queryFixed.Execute(selectionParams).GetFirst();
		//if(resultData.IsSet()){
			//if(resultData.SetOfBooks.Count()>0){
				//var DatraDateSet = resultData.SetOfBooks.Where(n=>n.SetOfBooksID.content == this.SetOfBooksID.content).GetFirst();
				//if(DatraDateSet.IsSet()){
					//Fecha6 = DatraDateSet.FirstAcquisitionDate.ToString();
				//}
			//}
		//}
		//Campo6 = Fecha6.Substring(8,2) +"/"+ Fecha6.Substring(5,2) +"/"+Fecha6.Substring(0,4);
		////Fin campo Qry
		//Campo7 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CACCDOCTYPE").Trim();
		//var DocType = Campo7;
		//if(Campo7 =="00023" || Campo7 =="00029" || Campo7 =="00079" || Campo7 =="00059"){
			//Campo7=	Library::RLStrings.GetElementByName(RegistroCompras.String, "KCAMTTRA").Trim();
			//if(ABSL:Numeric.IsNumeric(Campo7)){
				//var ValueCampo7 = ABSL:Numeric.ParseFromString(Campo7);
				//Campo7 = ValueCampo7.RoundToString(2,true);
				//Campo7 = Campo7.Replace(",",".");
			//}else{
				//Campo7 = "0.00";
			//}
		//}else{
			//Campo7 = "0.00";
		//}
		//var NumerCampo9;
		//if(Campo7 != "0.00"){
			//var NumerCampo7 = ABSL:Numeric.ParseFromString(Campo7);
			//var Katcomp = Library::RLStrings.GetElementByName(RegistroCompras.String, "KCAMTCOMP").Trim();
			//var NumerKatcomp = ABSL:Numeric.ParseFromString(Katcomp);
			//var Number8 = NumerKatcomp/NumerCampo7;
			//Campo8 = Number8.RoundToString(3,true);
			//Campo8 = Campo8.Replace(",",".");
			//Campo9 = Library::RLStrings.GetElementByName(RegistroCompras.String, "KCAMTCOMP)").Trim();
			//if(ABSL:Numeric.IsNumeric(Campo9)){
			//NumerCampo9 = ABSL:Numeric.ParseFromString(Campo9);
			//Campo9 = NumerCampo9.RoundToString(2,true);
			//Campo9 = Campo9.Replace(",",".");
			//}else{
				//Campo9="0.00";
			//}
		//}
		////tipo de Cambio colocar campo en la pantalla principal
		//Campo10 = this.Coin.Trim();
		////Fin colocar campo
		//Campo11 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CNOTE_HD)").Trim();;
		//var NumCampo11 = Campo11.Find(" ");
		//Campo11 = Campo11.Substring(0, NumCampo11 -1);
		//if(Campo11 == "7.3" && DocType == "00059"){
			//Campo11 = Library::RLStrings.GetElementByName(RegistroCompras.String, "KCAMTCOMP)").Trim();
			//var NumerCampo11 = ABSL:Numeric.ParseFromString(Campo11);
			//Campo11 = NumerCampo11.RoundToString(2,true);
			//Campo11 = Campo11.Replace(",",".");
		//}else{
			//Campo11="0.00";
		//}
		//if(DocType == "00060"){
			//Campo12 = Library::RLStrings.GetElementByName(RegistroCompras.String, "KCAMTCOMP)").Trim();
			//var NumerCampo12 = ABSL:Numeric.ParseFromString(Campo12);
			//Campo12 = NumerCampo12.RoundToString(2,true);
			//Campo12 = Campo12.Replace(",",".");
		//}else{
			//Campo12 = "0.00";
		//}
		//Campo13="0";
		//Campo14="0";
		//Campo15="0";
		//Campo16="0";
	//
	//
	//
	//
		//txtstring =  txtstring + Campo1+ "|" +Campo2+"|" +Campo3+"|" +Campo4+"|" +Campo5+"|" +Campo6+"|" 
		//+Campo7+"|" +Campo8+"|" +Campo9+"|" + Campo10+"|" +Campo11+"|" +Campo12+"|" +Campo13+"|" 
		//+Campo14+"|" +Campo15+"|" +Campo16+"|"  +"\r\n";
	//}
		//var ContMont = this.EDateInitial.GetMonth().Length();
		//var Mes1;
		//if(ContMont<2){
			//Mes1 = "0" + this.EDateInitial.GetMonth();
		//}else{
			//Mes1 = this.EDateInitial.GetMonth();
		//}
		//var NameReport = "LE"+ this.Companyto.RUC + this.EDateInitial.GetYear()+ Mes1+ "00130100001111";
		//xname = NameReport + ".txt";
		//xtype.content = "10001";
		//xtype.listID = "10296";
		//xbinary.mimeCode = "text/plain";
		//xbinary.content = Binary.ParseFromString(txtstring);
		//this.ReportsAttachments.CreateFile(xtype, xname, xname, xdesc, xbinary);
	//
//
//}