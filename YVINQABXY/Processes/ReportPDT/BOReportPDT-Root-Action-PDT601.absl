import ABSL;
import AP.Common.GDT as apCommonGDT;
import BASIS.Global as basis;
import AP.FO.BusinessPartner.Global;

var insCompanyConfig;
var strLine = "";

//Messages definition
var LanguageCode = Context.GetCurrentUserLanguage().ToString();
var msgCompany = "Por favor ingresar Empresa.";
var msgSetBook = "Por favor ingresar Set of Book";
var msgLimitDate = "Por favor ingresar la Fecha Inicial";
var msgDateInitial = "Por favor ingresar fecha inicial";
var msgNotConfig = "No hay datos de configuraci?n de esta empresa para el informe.";
var msgNotData = "La consulta no arroj? datos v?ldos para este informe.";

if (LanguageCode != "ES") {
msgCompany = "Please enter the Company.";
msgSetBook = "Please enter the Set of Book";
msgLimitDate = "Please enter Limit Date.";
msgDateInitial = "Please enter Date Initial";
msgNotConfig = "No configuration data for the company fro the report.";
msgNotData = "The query not returns valid data for this report.";
}

//Company Validation

var xmlResult;


while (true)
{
	var txtstring = "";
	if (this.CompanyID.IsInitial()) { break; }
	if (this.EDateInitial.IsInitial()) { break; }
	if (this.EDateEnd.IsInitial()) { break; }
	
	var serviceID = "";  
	var parameter : NameAndValue;
	var parameters : collectionof NameAndValue;
	//Caluclar los primeros dias 



	//FILTRO DINAMICO 

	//var YearDateTo = ABSL:Numeric.ParseFromString(TemDateToM);
									  
	var StringValue = "CWTYPECODE eq 'Y98YV7M9Y_R4' and PAR_SEL_TAX_COUNTRY eq 'PE' and CCOMP_UUID eq '" + this.CompanyID + "' and CPAYMENT_DATE gt datetime'" + 
	this.EDateInitial.GetYear()+ "-" + this.EDateInitial.GetMonth() + "-" + this.EDateInitial.GetDay() + "T00:00:00' and CTAXMONTH eq '--" + this.EDateInitial.GetMonth()+"'";
	//and CINVOICE_DATE le datetime'"+
	//this.EDateEnd.GetYear()+"-"+this.EDateEnd.GetMonth()+"-"+this.EDateEnd.GetDay()+"T00:00:00' and CTAXMONTH eq '" + this.EDateInitial.GetMonth()+"'";
	//Campos Consumo MashupCACC_DOC_ITEM_ID
	serviceID = "PW00030";  
	parameter.Name = "$select";  
	parameter.Value = "CTAX_ID_NR,CTAX_TYPE,KCWINVAMOUNT,CINVOICE_DATE,CPAYMENT_DATE,CINVOICE_ID";
	parameters.Add(parameter);   
	parameter.Name = "$filter";
	parameter.Value = StringValue;
	parameters.Add(parameter);  
	
	
	
	var ws_result = WebServiceUtilities.ExecuteWebService(serviceID, parameters);
	var Content = ws_result.ResponseContent;  
	var returnCode = ws_result.ReturnCode;  
	var strData = "";
	var sCurrency = "";
	var sLocalCurrency = "";
	var decAmount : DataType::DecimalValue;
	var otherAmount : DataType::apCommonGDT:Amount;
	
	var xname : LANGUAGEINDEPENDENT_LONG_Name;
	var xtype : DocumentTypeCode;
	var xdesc : Description;
	var xbinary : basis:BinaryObject;
	
	xname = "Resultado.txt";
	xtype.content = "10001";
	xtype.listID = "10296";
	xbinary.mimeCode = "text/plain";
	xbinary.content = Binary.ParseFromString(Content);
	this.ReportsAttachments.CreateFile(xtype, xname, xname, xdesc, xbinary);
	
	////
	////
	//var xmlResult;
	////var FechaAno = this.EDateInitial.GetYear();
	////var FechaMes = this.EDateInitial.GetMonth();
	////
	xmlResult = Library::RLStrings.XMLToArray(Content);
	
	if (xmlResult.Count() == 0) { break; }
	
	var NumeroCuent = "";
	foreach (var RegistroCompras in xmlResult){
		var Campo1=""; //TAX_TYPE
		var Campo2="";//TAX_ID_NR
		var Campo3=""; // OEDPARNERT
		var Campo4="";// OEDPARNERT
		var Campo5="";// OEDPARNERT
		var Campo6="";//WINVAMOUNT
		var Campo7="";//CINVOICE_DATE
		var Campo8="";//CINVOICE_DATE
		var Campo9="";//Valor Fijo 1

		Campo1 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CTAX_TYPE").Trim();
		var vIdentificacion = "";
		if(Campo1 == "2"){
			Campo1 = "01";
		}else{
			if(Campo1 == "5"){
				Campo1 = "04";
			}else{
				if(Campo1 == "1"){
					Campo1 = "06";
				}else{
					if(Campo1 == "6"){
						Campo1 = "00";
					}else{
						Campo1 = "07";
					}				
				}
			}
		}
		Campo2 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CTAX_ID_NR").Trim();
		Campo6 = Library::RLStrings.GetElementByName(RegistroCompras.String, "KCWINVAMOUNT").Trim();
		var Numeric6 = ABSL:Numeric.ParseFromString(Campo6);
		if(Numeric6 < 0){
			Numeric6 = Numeric6 * -1;
		}
		Campo6 = Numeric6.RoundToString(2,true);
		Campo6 = Campo6.Replace(",",".");
		Campo7 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CINVOICE_DATE").Trim();
		Campo7 = Campo7.Substring(8,2) +"/"+ Campo7.Substring(5,2) +"/"+Campo7.Substring(0,4);
		Campo8 = Library::RLStrings.GetElementByName(RegistroCompras.String, "CPAYMENT_DATE").Trim();
		Campo8 = Campo8.Substring(8,2) +"/"+ Campo8.Substring(5,2) +"/"+Campo8.Substring(0,4);
		var IDFactSupplier = Library::RLStrings.GetElementByName(RegistroCompras.String, "CINVOICE_ID").Trim();
		if(!IDFactSupplier.IsInitial()){
			
			
			var serviceID1 = "";  
			var parameter1 : NameAndValue;
			var parameters1 : collectionof NameAndValue;
			//Caluclar los primeros dias 



			//FILTRO DINAMICO 

			//var YearDateTo = ABSL:Numeric.ParseFromString(TemDateToM);
			var StringValue1 = "COEDREF_F_ID eq  '" + IDFactSupplier+"'";
			//Campos Consumo MashupCACC_DOC_ITEM_ID
			serviceID1 = "PW00031";  
			parameter1.Name = "$select";  
			parameter1.Value = "COEDPARTNER";
			parameters1.Add(parameter1);   
			parameter1.Name = "$filter";
			parameter1.Value = StringValue1;
			parameters1.Add(parameter1);  
	
	
	
			var ws_result1 = WebServiceUtilities.ExecuteWebService(serviceID1, parameters1);
			var Content1 = ws_result1.ResponseContent;  
			var returnCode1 = ws_result1.ReturnCode;  
			var strData1 = "";
			var sCurrency1 = "";
			var sLocalCurrency1 = "";
			var decAmount1 : DataType::DecimalValue;
			var otherAmount1 : DataType::apCommonGDT:Amount;
	
			var xname1 : LANGUAGEINDEPENDENT_LONG_Name;
			var xtype1 : DocumentTypeCode;
			var xdesc1 : Description;
			var xbinary1 : basis:BinaryObject;
	
			//xname = "Resultado ";
			//xtype.content = "10001";
			//xtype.listID = "10296";
			//xbinary.mimeCode = "text/plain";
			//xbinary.content = Binary.ParseFromString(Content);
			//this.ReportsAttachments.CreateFile(xtype, xname, xname, xdesc, xbinary);
	
			////
			////
			//var xmlResult;
			////var FechaAno = this.EDateInitial.GetYear();
			////var FechaMes = this.EDateInitial.GetMonth();
			////
			var xmlResult1 = Library::RLStrings.XMLToArray(Content1);
	
			if (xmlResult1.Count() == 0) { break; }
			var Contador = 0;
			foreach (var RegistroCompras1 in xmlResult1){
				if(Contador == 0){
					var Comprobante = Library::RLStrings.GetElementByName(RegistroCompras1.String, "COEDPARTNER").Trim();
					var Taman = Comprobante.Length();
					if(Taman > 3) {
						Campo3 = Comprobante.Substring(0, 2);
						Campo4 = Comprobante.Substring(3, 4);
						var Cont = Comprobante.Length() - 8;
						Campo5 = Comprobante.Substring(8, Cont);
						Contador = Contador +1;
					}
				}
			}

		}

		if(Campo3.IsInitial()){
			Campo3 = "00";
		}
		if(Campo4.IsInitial()){
			Campo4="00";
		}
		if(Campo5.IsInitial()){
			Campo5 = "00";
		}
		Campo9 ="1";
		txtstring =  txtstring + Campo1+ "|" +Campo2+"|" +Campo3+"|" +Campo4+"|" +Campo5+"|" +Campo6+"|" +Campo7+"|" +Campo8+"|" +Campo9+"|" +"\r\n";

		}
		var ContMont = this.EDateInitial.GetMonth().Length();
		var Mes;
		if(ContMont<2){
			Mes = "0" + this.EDateInitial.GetMonth();
		}else{
			Mes = this.EDateInitial.GetMonth();
		}
		var NameReport = "0601"+ this.EDateInitial.GetYear()+ Mes  + this.Companyto.RUC;

	
		xname = NameReport + ".4ta";
		xtype.content = "10001";
		xtype.listID = "10296";
		xbinary.mimeCode = "text/plain";
		xbinary.content = Binary.ParseFromString(txtstring);
		this.ReportsAttachments.CreateFile(xtype, xname, xname, xdesc, xbinary);
		break;
}